---
name: Tests

on:
  push:
    branches: [main]
    paths:
      - tests/*
      - {{cookiecutter.project_slug}}/*
  pull_request:
    branches: [main]
    paths:
      - tests/*
      - {{cookiecutter.project_slug}}/*

jobs:
  build:
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9','3.10','3.11']
    name: {{' ${{ matrix.os }} - py${{ matrix.python-version }} '}}
    runs-on: {{' ${{ matrix.os }} '}}
    timeout-minutes: 30
    concurrency:
      group: {{ '${{ github.workflow }}-${{ matrix.python-version }}-${{ github.ref }}' }}
      cancel-in-progress: true
    steps:

      - uses: actions/checkout@v3

      # we need environment.yml to see if we have a cache hit
      - name: Generate env spec
        run: pip install tomli && python make_env.py test,io,extra -p {{ '${{ matrix.python-version}}' }} -n hydromt

      - name: load from cache
        id: cache
        uses: actions/cache/restore@v3
        with:
          path: |
            /usr/share/miniconda3
            ~/pycache
          # the below two settings mean we'll alway srestore the cache
          # but the cache hit output can tell us if we have to update afterwards
          key: {{ 'test-py${{ matrix.python-version }}-${{ hashFiles('environment.yml')  }}' }}
          restore-keys: |
            {{ 'test-py${{ matrix.python-version }}' }}

      - name: Fail on no cache restore
        if: steps.cache.outputs.cache-matched-key == ''
        run: |
          echo "Failed to restore any cache. exiting..."
          exit 1

      # by avoiding the mamba setup stage by loading it from cache instead we save
      # a lot of setup time, but we do have to do our own PATH management
      # hence the exports
      - name: Update environment
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          export PATH=/usr/share/miniconda3/bin:$PATH
          mamba env update -n {{ '{{cookiecutter.project_slug}}' }} -f environment.yml

      - name: Conda info
        run: |
          export PATH=/usr/share/miniconda3/bin:$PATH
          conda info
          conda list -n hydromt

      - name: Test
        run: |
          export PATH=/usr/share/miniconda3/bin:$PATH
          export NUMBA_DISABLE_JIT=1
          PYTHONPYCACHEPREFIX=~/pycache mamba run -n hydromt python -m {{ '{{cookiecutter.project_slug}}' }} --verbose --cov=hydromt --cov-report xml
jobs:
  Test-matrix:
    timeout-minutes: 10
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9', '3.10', '3.11']
    steps:
      - uses: actions/checkout@v3
      - run: pip install tomli
      - run: python make_env.py test
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: {{'${{ matrix.python-version }} '}}
          miniforge-variant: Mambaforge
          channels: conda-forge, defaults
          channel-priority: strict
          environment-file: environment.yml
          activate-environment: {{cookiecutter.project_slug}}

      - name: Test

      - uses: codecov/codecov-action@v3

concurrency:
  group: {{' ${{ github.workflow }}-${{ github.ref }} '}}
  cancel-in-progress: true
